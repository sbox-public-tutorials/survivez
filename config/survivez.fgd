// 
// survivez.SurviveZ : Sandbox.Game 
// 
@PointClass = survivez : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// survivez.TriggerZombieArea : Sandbox.BaseTrigger 
// 
@SolidClass 
metadata
{
	auto_apply_material = "materials/tools/toolstrigger.vmat"
}
= sz_trigger_zombie_area : "Player goes into this area and dies straight away."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	damage(float) : "Damage" : 0 : ""
	roundsdamage(string) : "Damage Per Second" :  : ""
	startdisabled(boolean) : "Start Disabled" : 0 : "Should this entity start disabled?"
	filtername(filterclass) : "Filtername" :  : "TODO: Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
	spawnflags(flags) = [
		1 : "Clients" : 1
		2 : "Npcs" : 0
		4 : "Pushables" : 0
		8 : "Physics Objects" : 0
		16 : "Allied Npcs" : 0
		32 : "Client In Vehicle" : 0
		64 : "Everything" : 0
		512 : "Client Not In Vehicle" : 0
		1024 : "Physics Debris" : 0
	]

	input SetDamage(float) : "Sets the damage per second for this trigger_hurt"
	input Enable(void) : "Enables this trigger"
	input Disable(void) : "Disables this trigger"
	input Toggle(void) : "Toggles this trigger between enabled and disabled states"
	input SetColor(string) : ""

	output OnStartTouch(void) : "Fired when an entity starts touching this trigger. The touching entity must pass this trigger's filters to cause this output to fire."
	output OnEndTouch(void) : "Fired when an entity stops touching this trigger. Only entities that passed this trigger's filters will cause this output to fire."
	output OnStartTouchAll(void) : "Fired when an entity starts touching this trigger while no other passing entities are touching it."
	output OnEndTouchAll(void) : "Fired when all entities touching this trigger have stopped touching it."
]

// 
// survivez.Entities.RandomItemSpawnerHammer : Sandbox.Entity 
// 
@PointClass editormodel( "models/citizen_props/cardboardbox01.vmdl" ) 
metadata
{
	entity_tool_name = "Random Item Spawner"
	entity_tool_group = "SurviveZ"
	entity_tool_tip = "Defines where Items will spawn."
}
= sz_itemspawner : "Spawns a random item in it's list."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	itemtypes(string) : "Item Attributes" :  : ""
	spawnradius(float) : "Spawn Radius" : 200 : ""
	spawnrate(float) : "Spawn Rate" : 2 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// survivez.Entities.ResourceClusterHammer : Sandbox.Entity 
// 
@PointClass editormodel( "models/rust_props/rubble_piles/rubble_pile_3x3_junkyard.vmdl" ) 
metadata
{
	entity_tool_name = "Random Resource Spawner"
	entity_tool_group = "SurviveZ"
	entity_tool_tip = "Defines where Resource will spawn."
}
= sz_resourcecluster : "Spawns a random Resource."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	resourcetypes(string) : "Resource Attributes" :  : ""
	spawnradius(float) : "Spawn Radius" : 600 : ""
	spawnrate(float) : "Spawn Rates" : 3 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// survivez.Entities.ZombieSpawnerHammer : Sandbox.Entity 
// 
@PointClass editormodel( "models/editor/playerstart.vmdl" ) 
metadata
{
	entity_tool_name = "Zombie Point"
	entity_tool_group = "SurviveZ"
	entity_tool_tip = "Defines where zombies will spawn."
}
= sz_zombiespawner : "Spawns a random item in it's list."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	zombietypes(string) : "Zombie Attributes" :  : ""
	spawnradius(float) : "Spawn Radius" : 600 : ""
	spawnrate(float) : "Spawn Rate" : 3 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// survivez.Entities.Zombie : survivez.Entities.NPC 
// 
@PointClass = sz_zombie_standard : "Standard Zombie."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

